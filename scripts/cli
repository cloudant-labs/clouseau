#!/bin/bash
## -*- mode: shell -*-
## vim: set filetype=shell
## sublimeconf: filetype=shell

# https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

SELF_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ZIOSE_CLI_DBG=1

requirements=()
. ${SELF_DIR}/console.sh
. ${SELF_DIR}/tools.sh
requirements=(
    $(console::requires)
    $(tools::requires)
    "awk"
)

if [ "$#" -eq 0 ]; then
    command='help'
else
    command=$1
    shift
fi

die() {
    echo -e "\n$(console::red)$(console::bold)FATAL: ${*}$(console::reset)" >&2
    return 1
}

function help_message() {
    cat ${SELF_DIR}/cli.md
}

function short_help() {
    help_message | awk "/# CLI/,/---/ {print}" -
}

function help_topic() {
    help_message | awk "/###.*\`${1}\`:.*/,/---/ {print}" -
}

function list() {
    help_message | sed -n 's/###/*/p' | sort
}

function help_cmd() {
    if [ "$#" -eq 0 ]; then
        console::markdown short_help
    else
        console::markdown "help_topic $1"
    fi
}

function deps_cmd() {
    if [ "$#" -lt 1 ]; then
        echo -e "\n$(console::red)ERROR: Missing mandatory arguments$(console::reset)\n"
        console::markdown "help_topic deps"
        exit 1
    fi
    local command=${1}
    case "${command}" in
    tree)
        echo "not yet implemented"
        ;;
    esac
}

case "${command}" in
    verify)
        tools::verify "${requirements[@]}"
        exit $?
        ;;
    activate)
        tools::activate_tools
        exit $?
        ;;
    commands)
        console::markdown list
        exit $?
        ;;
    help)
        help_cmd "$@"
        exit $?
        ;;
    deps)
        deps_cmd "$@"
        exit $?
        ;;
    bootstrap)
        tools::bootstrap $(basename $SHELL)
        exit $?
        ;;
    *)
        console::errorLn "Unknown command '${command}'"
        console::infoLn "List of supported commands"
        console::markdown list
        exit $?
        ;;
esac
