DIRENV_DBG=${ZIOSE_DIRENV_DEBUG:0}
PATH_add scripts
PATH_add bin
trap on_error ERR

on_error() {
    [ $? -eq 0 ] && return
    failure_message
}

help_message() {
    cat <<EOF
    For more help run: cli help.install
EOF
}

failure_message() {
    cat <<EOF

$(console::red)$(console::bold)direnv wasn't able to complete execution.
You may have been given some recommendations in the error message.
Follow them, and then you'll need to re-run direnv by running "direnv allow".$(console::reset)
EOF
    help_message
}

die() {
    echo -e "$(console::red)$(console::bold)FATAL: ${*}$(console::reset)" >&2
    return 1
}

asdf_has() {
    asdf current $1 >>/dev/null 2>&1
}

requirements=()
. scripts/console.sh
. scripts/tools.sh
requirements=(
    $(console::requires)
    $(tools::requires)
)

(console::debug ${DIRENV_DBG} "requirements: ${requirements[@]}")

hints=()
for tool in ${requirements[@]}; do
    if ! has ${tool} ; then hints+=("please install ${tool}"); fi
done

use asdf
while read asdf_tool; do
    if ! asdf_has ${asdf_tool}; then asdf direnv local ${asdf_tool}; fi
done < <(cat .tool-versions | grep -v '\#')

watch_file ".asdf"
dotenv_if_exists .envrc.local
export ERL_PATH=$(asdf where erlang)
export JINTERFACE_VSN=$(semver_search "${ERL_PATH}/lib" "jinterface-" "1")
JINTERFACE_PATH="${ERL_PATH}/lib/jinterface-${JINTERFACE_VSN}"

if [ ! -f "deps/jinterface-${JINTERFACE_VSN}.jar" ]; then
    if [ -f "${JINTERFACE_PATH}/priv/OtpErlang.jar" ]; then
        echo "Installing jinterface-${JINTERFACE_VSN}.jar"
        cp "${JINTERFACE_PATH}/priv/OtpErlang.jar" "deps/jinterface-${JINTERFACE_VSN}.jar"
    else
        echo "jinterface not found in ${JINTERFACE_PATH}/"
    fi
fi

if [ ${#hints[@]} -ne 0 ]; then
    (
        echo -e "\n$(console::red)Run the following commands to bring your environment up-to-date:"
        for cmd in "${hints[@]}"; do
            echo "cmd: ${cmd}"
            console::warn "    $(console::red)$cmd"
        done
        echo ""
    )
    die
fi

export JAVA_HOME="$(dirname "$(dirname "$(expand_path "$(asdf which java)" "/")")")"

tools::activate_tools

GIT_HOOKS_DIR=`expand_path .git/hooks .`
[ -L ${GIT_HOOKS_DIR}/pre-commit ] || ln -s ${SELF_DIR}/pre-commit-hook ${GIT_HOOKS_DIR}/pre-commit
