pluginManagement {
    includeBuild('build-logic')
}

def scalaLongVersion = "2.13.8"
def scalaShortVersion = scalaLongVersion.tokenize('.').dropRight(1).join('.')

dependencyResolutionManagement {
    repositories {
        mavenCentral{ name = 'mavenCentral' }
        flatDir {
            dirs 'deps'
        }
    }

    ext.provenance = [
        'jinterface': 'https://github.com/erlang/otp/tree/master/lib/jinterface',
        '__': 'mavenCentral'
    ]

    versionCatalogs {
        libs {
            version('zio-vsn', '2.0.0')
            version('zio-nio', '2.0.0')
            version('zio-config', '3.0.2')
            version('jinterface', "${System.env.JINTERFACE_VSN}")
            version('sbt', '1.3.5')

            // Scala compiler
            library('scala-compiler', 'org.scala-lang', 'scala-compiler').version(scalaLongVersion)
            library('scala-compiler-bridge', 'org.scala-sbt', "compiler-bridge_$scalaShortVersion").versionRef('sbt')
            library('scala-compiler-interface', 'org.scala-sbt', 'compiler-interface').versionRef('sbt')
            library('scala-library', 'org.scala-lang', 'scala-library').version(scalaLongVersion)
            library('zinc', 'org.scala-sbt', "zinc_$scalaShortVersion").version(scalaLongVersion)

            // This dependency is used by the application.
            library('guava', 'com.google.guava:guava:30.1.1-jre')
            library('zio-lib', 'dev.zio', "zio_$scalaShortVersion").versionRef('zio-vsn')
            library('zio-nio', 'dev.zio', "zio-nio_$scalaShortVersion").versionRef('zio-nio')
            library('jinterface', 'com.ericsson.otp.erlang', 'jinterface').versionRef('jinterface')

            // logger
            library('slf4j-api', 'org.slf4j:slf4j-api:1.7.32')
            library('slf4j-log4j12', 'org.slf4j:slf4j-log4j12:1.7.32')
            library('zio-logging', "dev.zio:zio-logging_$scalaShortVersion:2.0.1")

            // config
            library('zio-config', 'dev.zio', "zio-config_$scalaShortVersion").versionRef('zio-config')
            library('zio-config-typesafe', 'dev.zio', "zio-config-typesafe_$scalaShortVersion").versionRef('zio-config')
            library('zio-config-magnolia', 'dev.zio', "zio-config-magnolia_$scalaShortVersion").versionRef('zio-config')
            library('zio-config-refined', 'dev.zio', "zio-config-refined_$scalaShortVersion").versionRef('zio-config')

            // metrics
            library('zio-zmx', 'dev.zio:zio-zmx_3:0.0.11')

            // testing
            library('junit', 'junit:junit:4.13.2')
            library('zio-tests', 'dev.zio', "zio-test_$scalaShortVersion").versionRef('zio-vsn')
            library('zio-test-junit', 'dev.zio', "zio-test-junit_$scalaShortVersion").versionRef('zio-vsn')
        }
    }
}

rootProject.name = 'ziose'

include 'domain', 'experiments', 'benchmarks', 'actors'
